name: CI

on:
  push:
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  golangci:
    name: lint
    
    runs-on: ubuntu-latest
    
    steps:
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.24'
      
      - name: Check out code
        uses: actions/checkout@v4

      - name: Run golangci-lint
        uses: golangci/golangci-lint-action@v8
        with:
          version: v2.1

  tests:
    name: unit tests

    needs: golangci

    runs-on: ubuntu-latest
    
    steps:
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.24'
      
      - name: Check out code
        uses: actions/checkout@v4

      - name: Run tests
        run: make test-unit
      
      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          flags: unit-tests
          name: unit-tests

  integration-tests:
    name: integration tests

    needs: tests

    runs-on: ubuntu-latest

    if: github.ref == 'refs/heads/main' || github.base_ref == 'main'
    
    steps:
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.24'

      - name: Check out code
        uses: actions/checkout@v4

      - name: Create .test.env file from secrets
        run: |
          echo "POSTGRES_DB=${{ vars.POSTGRES_DB }}" >> .test.env
          echo "POSTGRES_USER=${{ vars.POSTGRES_USER }}" >> .test.env
          echo "POSTGRES_PASSWORD=${{ vars.POSTGRES_PASSWORD }}" >> .test.env
          echo "POSTGRES_URL=postgres://${{ vars.POSTGRES_USER }}:${{ vars.POSTGRES_PASSWORD }}@localhost:5433/${{ vars.POSTGRES_DB }}?sslmode=disable" >> .test.env
          echo "REDIS_URL=redis://localhost:6380" >> .test.env

      - name: Run integration tests with Docker
        run: make test-integration

      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          flags: integration-tests
          name: integration-tests